# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

variables:
  # the name of the service connection that you created above
  serviceConnectionToAzure: connection-to-pipelinesjava
  # the name of your web app here is the same one you used above
  # when you created the web app using the Azure CLI
  appName: pipelinesjavajv

trigger:
- master

pool:
  #vmImage: 'ubuntu-latest'
  vmImage: 'vs2017-win2016'

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: false
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'


# add these as the last steps (below all the other `task` items under `steps`)
# to deploy to your app service
- task: CopyFiles@2
  displayName: Copy Files
  inputs:
    SourceFolder: $(system.defaultworkingdirectory)
    Contents: '**'
    TargetFolder: $(build.artifactstagingdirectory)

- task: PublishBuildArtifacts@1
  displayName: Publish Artifact
  inputs:
    PathtoPublish: $(build.artifactstagingdirectory)

- task: AzureWebApp@1
  displayName: Azure Web App Deploy
  inputs:
    azureSubscription: $(serviceConnectionToAzure)
    appType: webAppWindows
    appName: $(appName)
    package: $(build.artifactstagingdirectory)/**/*.war
